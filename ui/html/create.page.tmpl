{{template "base" .}}
 
{{define "title"}}Домашняя страница{{end}}
 
{{define "main"}}
<div class="mx-auto">
<div class="flex">
    <div class="basis-1/2 bg-white ml-auto mr-2 rounded-lg border-zink-100 px-8 py-2 my-4">
        <div class="text-right">
            <a href="/profile/detail">
                <button class="text-sm border border-indigo-200 text-indigo-200 py-2 px-3 rounded-full hover:bg-indigo-400 hover:text-white">
                    Редактировать профиль
                </button>
            </a>
            <a href="/admin">
                <button class="text-sm border border-indigo-200 text-indigo-200 py-2 px-3 rounded-full hover:bg-indigo-400 hover:text-white">
                    Администрирование
                </button>
            </a>
        </div>
        <section class="bg-white dark:bg-gray-900 py-8 lg:py-16 antialiased">
            <div class="mx-auto px-4">
                <article class="p-2 text-base bg-white rounded-lg dark:bg-gray-900">
                    <footer class="flex justify-between items-center mb-2">
                        <div class="items-center">
                            <p class="mr-3 text-sm text-gray-900 dark:text-white font-semibold"><img
                                    class="mr-2 w-24 h-24 rounded-full"
                                    src="/static/img/{{.User.Photo}}"
                                    alt="{{.User.LastName}}"></p>
                        </div>
                        <div class="mr-auto ml-0" >
                            <p class="text-xl text-gray-900 dark:text-white font-semibold pt-2"><time pubdate datetime="2022-02-08"
                                    title="Годжо Сатору">{{.User.FirstName}} {{.User.LastName}}</time></p>
                            <p class="text-sm text-indigo-200 font-semibold pt-2"><time pubdate datetime="2022-02-08"
                                title="Годжо Сатору">{{.User.Email}}</time></p>
                            <div class="flex pt-2">
                                <p class="flex text-indigo-200 font-semibold pr-3 hover:text-blue-900">{{.UserTredsCount}} публикаций</p>
                                <p class="flex text-indigo-200 font-semibold pr-3 hover:text-blue-900">{{.UserSubsFrom}} подписчиков</p>
                                <p class="flex text-indigo-200 font-semibold pr-3 hover:text-blue-900">{{.UserSubsTo}} подписок</p>
                            </div>  
                        </div>                 
                    </footer>
    
                    <p class="text-gray-500 dark:text-gray-400">
                        Описание...
                    </p>
                </article>
            </div>
        </section>
    </div> 
    <div class=" basis-1/5 bg-white rounded-lg border-zink-100 my-4 mr-44 px-4 py-6">
        <h1 class="text-sm text-gray-900 dark:text-white font-semibold my-2">Интересные каналы</h1>
        {{range .Users}}        
        <article class="p-2 text-base bg-white rounded-lg dark:bg-gray-900">
            <footer class="flex justify-between items-center mb-2">
                <div class="items-center">
                    <p class="pr-3 text-sm text-gray-900 dark:text-white font-semibold">
                        <img class="h-14 w-14 rounded-full" src="/static/img/{{.Photo}}" alt="{{.FirstName}} {{.LastName}}">
                    </p>
                </div>
                <div class="mr-auto ml-0">
                    <p class="text-sm text-gray-900 dark:text-white font-semibold">
                        <time pubdate datetime="2022-02-08" title="Годжо Сатору">{{.FirstName}} {{.LastName}}</time>
                    </p>
                </div>
                <button class="subscribe-btn text-sm text-blue-900 text-gray-500 py-2 px-3 rounded-full bg-indigo-200" data-user-id="{{.ID}}">
                    Подписаться
                </button>
            </footer>
        </article>
        {{end}}
        <div class="item-center">
        <a href="/moreuser">
            <button class="text-sm bg-indigo-200 hover:bg-indigo-200 hover:text-blue-900 text-gray-500 bg-white py-2 px-3 rounded-full">
            Больше. . .
            </button>
        </a>
        </div>
    </div>

    </div>
    <div class="flex">
        <div class="basis-1/2 bg-white ml-auto mr-2 rounded-lg border-zink-100 px-8 p-6 my-4 item-center pb-44">
            <div class="">
                <a href="/profile" class="text-gray-400 pr-4 rounded-md text-xm font-medium">Стена</a>
                <a href="#" class="text-gray-950 hover:text-gray-950 pr-4 rounded-md text-xm font-medium">Опубликовать тред</a>
                <a href="#" class="text-gray-400 hover:text-gray-950 pr-4 rounded-md text-xm font-medium">Мои комментарии</a>
                <a href="#" class="text-gray-400 hover:text-gray-950 pr-4 rounded-md text-xm font-medium">Понравившиеся</a>
                <a href="#" class="text-gray-400 hover:text-gray-950 pr-4 rounded-md text-xm font-medium">Избранные</a>
            </div>
            
            <form class="w-full mx-auto py-12" method="post">
                <p class="text-red-300">{{.ErrorMessageCreateTred}}</p>
                <div class="items-center border-b border-indigo-400 py-2">
                  <input type="hidden" name="parentThreadId" value="{{.ParentTredId}}">
                  <textarea name="tredArea" class="rounded-md appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:border-none resize-none border-1 border-indigo-200" rows="5">{{.CurrentTredBackstage}}</textarea>
                  <select name="category_select" id="category_select" class="py-2.5 px-0 text-sm font-semibold text-indigo-500 bg-transparent border-0 border-b border-indigo-500 appearance-none dark:text-gray-400 dark:border-gray-700 focus:outline-none focus:ring-0">
                    <option value="0" disabled selected>Выберите категорию</option>
                    {{range .Categories}}  
                    <option class="p-2" value="{{.ID}}">{{.Name}}</option>
                    {{end}} 
                </select>
                  <button class="flex-shrink-0 bg-indigo-400 text-sm border-2 border-indigo-400 hover:border-indigo-400 hover:bg-white text-white py-1 px-2 rounded hover:text-indigo-400" type="submit">
                    Опубликовать
                  </button>
                  <button class="flex-shrink-0 border-transparent border-4 text-indigo-200 hover:text-indigo-400 text-sm py-1 px-2 rounded" type="button">
                    Отмена
                  </button> 
                </div>

                <div class="mb-4">
                    <label for="tags" class="block text-gray-700 font-bold mb-2">Теги к треду:</label>
                    <div id="tagInputContainer" class="flex flex-wrap border border-gray-300 rounded py-2 px-3">
                        <input type="text" id="tagInput" placeholder="Наберите пожалуйста желаемы тег и нажмите enter" class="flex-1 border-none focus:outline-none">
                    </div>
                    <input type="hidden" id="tags" name="tags">
                </div>

              </form>
        </div> 
        <div class=" basis-1/5 rounded-lg border-zink-100 my-4 mr-44 px-4 py-8 h-60"></div>
    </div>
</div>
{{end}}

<script>
    document.addEventListener('DOMContentLoaded', () => {
    const tagInput = document.getElementById('tagInput');
    const tagInputContainer = document.getElementById('tagInputContainer');
    const hiddenTagsInput = document.getElementById('tags');

    const tags = [];

    tagInput.addEventListener('keypress', (event) => {
        if (event.key === 'Enter') {
            event.preventDefault();
            const tagValue = tagInput.value.trim();
            if (tagValue && !tags.includes(tagValue)) {
                tags.push(tagValue);
                addTag(tagValue);
                updateHiddenInput();
            }
            tagInput.value = '';
        }
    });

    tagInputContainer.addEventListener('click', (event) => {
        if (event.target.tagName === 'BUTTON') {
            const tagValue = event.target.parentElement.querySelector('span').innerText;
            removeTag(tagValue);
        }
    });

    function addTag(value) {
        const tagElement = document.createElement('div');
        tagElement.classList.add('tag');
        tagElement.innerHTML = `<span>${value}</span><button type="button">×</button>`;
        tagInputContainer.insertBefore(tagElement, tagInput);
    }

    function removeTag(value) {
        const index = tags.indexOf(value);
        if (index > -1) {
            tags.splice(index, 1);
            const tagElements = Array.from(tagInputContainer.querySelectorAll('.tag'));
            tagElements.forEach(tagElement => {
                if (tagElement.querySelector('span').innerText === value) {
                    tagElement.remove();
                }
            });
            updateHiddenInput();
        }
    }

    function updateHiddenInput() {
        hiddenTagsInput.value = tags.join(',');
    }
});

</script>